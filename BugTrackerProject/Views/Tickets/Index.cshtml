@model IEnumerable<BugTrackerProject.Models.Ticket>
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ShowGrid</title>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />

    <link href="https://cdn.datatables.net/1.10.15/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.datatables.net/responsive/2.1.1/css/responsive.bootstrap.min.css" rel="stylesheet" />

    <script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js "></script>

    <script>

        $(document).ready(function () {
            $("#demoGrid").DataTable({

                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "pageLength": 5,

                "ajax": {
                    "url": "/Tickets/GetList",
                    "type": "POST",
                    "datatype": "json"
                },

                "columnDefs":
                    [{
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [7],
                        "searchable": false,
                        "orderable": false
                    },
                    {
                        "targets": [8],
                        "searchable": false,
                        "orderable": false
                    },
                    {
                        "targets": [9],
                        "searchable": false,
                        "orderable": false
                    }],

                "columns": [
                    { "data": "AssignedToUserId", "name": "AssignedToUserId", "autoWidth": true },
                    { "data": "OwnerUserId", "name": "OwnerUserId", "autoWidth": true },
                    { "data": "ProjectId", "name": "ProjectId", "autoWidth": true },
                    { "data": "TicketPriorityId", "name": "TicketPriorityId", "autoWidth": true },
                    { "data": "TicketStatusId", "name": "TicketStatusId", "autoWidth": true },
                    { "data": "TicketTypeId", "name": "TicketTypeId", "autoWidth": true },
                    { "data": "Title", "name": "Title", "autoWidth": true },
                    { "data": "Description", "name": "Description", "autoWidth": true },
                    { "data": "Created", "name": "Created", "autoWidth": true },
                    { "data": "Updated", "name": "Updated", "autoWidth": true },

                    {
                        "render": function (data, type, full, meta) { return '<a class="btn btn-info" href="/Demo/Edit/' + full.AssignedToUserId + '">Edit</a>'; }
                    },
                    {
                        data: null, render: function (data, type, row) {
                            return "<a href='#' class='btn btn-danger' onclick=DeleteData('" + row.AssignedToUserId + "'); >Delete</a>";
                        }
                    },

                ]

            });
        });
    </script>
    <script>
        function DeleteData(AssignedToUserId) {
            if (confirm("Are you sure you want to delete ...?")) {
                Delete(AssignedToUserId);
            }
            else {
                return false;
            }
        }
        function Delete(AssignedToUserId) {
            var url = '@Url.Content("~/")' + "Demo/DeleteCustomer";
            $.post(url, { ID: AssignedToUserId }, function (data) {
                if (data == "Deleted") {
                    alert("Delete Customer !");
                    oTable = $('#demoGrid').DataTable();
                    oTable.draw();
                }
                else {
                    alert("Something Went Wrong!");
                }
            });
        }
    </script>
</head>
<body>
    <div class="container">
        <br />
        <div style="width:90%; margin:0 auto;">
            <table id="demoGrid" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                <thead>
                    <tr>

                        <th>
                            AssignedToUser.Email
                        </th>
                        <th>
                            OwnerUser.Email
                        </th>
                        <th>
                            Project.Name
                        </th>
                        <th>
                            TicketPriority.Name
                        </th>
                        <th>
                            TicketStatus.Name
                        </th>
                        <th>
                            TicketType.Name
                        </th>
                        <th>
                            Title
                        </th>
                        <th>
                            Description
                        </th>
                        <th>
                            Created
                        </th>
                        <th>
                            Updated
                        </th>


                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tfoot>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <th>
                                @Html.DisplayFor(modelItem => item.AssignedToUser.Email)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.OwnerUser.Email)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.Project.Name)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.TicketPriority.Name)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.TicketStatus.Name)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.TicketType.Name)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.Title)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.Description)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.Created)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.Updated)
                            </th>
                            <th>
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                            </th>
                        </tr>
                    }

                </tfoot>
            </table>
        </div>
    </div>
</body>
</html>  